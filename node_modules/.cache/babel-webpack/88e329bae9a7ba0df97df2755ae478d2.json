{"ast":null,"code":"import { CreateDashboardComponent } from 'src/app/create-dashboard/create-dashboard.component';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/dashboard.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/toolbar\";\nimport * as i5 from \"@angular/material/tooltip\";\nimport * as i6 from \"@angular/material/icon\";\nimport * as i7 from \"@angular/material/paginator\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@angular/material/card\";\nimport * as i10 from \"@angular/material/button\";\nimport * as i11 from \"@angular/material/menu\";\n\nfunction DashboardComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵelementStart(1, \"mat-card\", 10);\n    i0.ɵɵelementStart(2, \"button\", 11);\n    i0.ɵɵelementStart(3, \"mat-icon\", 12);\n    i0.ɵɵtext(4, \"more_vert\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"mat-menu\", null, 13);\n    i0.ɵɵelementStart(7, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_21_Template_button_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const dashboard_r1 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.editDashboard(dashboard_r1.id);\n    });\n    i0.ɵɵelementStart(8, \"mat-icon\");\n    i0.ɵɵtext(9, \"edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"span\");\n    i0.ɵɵtext(11, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_21_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const dashboard_r1 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.deleteDashboard(dashboard_r1.id);\n    });\n    i0.ɵɵelementStart(13, \"mat-icon\");\n    i0.ɵɵtext(14, \"delete\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"span\");\n    i0.ɵɵtext(16, \"Delete\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"button\", 15);\n    i0.ɵɵelementStart(18, \"mat-icon\");\n    i0.ɵɵtext(19, \"filter_none\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"span\");\n    i0.ɵɵtext(21, \"View\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"mat-card-header\");\n    i0.ɵɵelement(23, \"div\", 16);\n    i0.ɵɵelementStart(24, \"mat-card-title\");\n    i0.ɵɵtext(25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"mat-card-subtitle\");\n    i0.ɵɵtext(27);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const dashboard_r1 = ctx.$implicit;\n\n    const _r2 = i0.ɵɵreference(6);\n\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"matMenuTriggerFor\", _r2);\n    i0.ɵɵadvance(23);\n    i0.ɵɵtextInterpolate(dashboard_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(dashboard_r1.description);\n  }\n}\n\nconst _c0 = function () {\n  return [5, 10, 25, 100];\n};\n\nexport class DashboardComponent {\n  constructor(dashboardService, dialog, router) {\n    this.dashboardService = dashboardService;\n    this.dialog = dialog;\n    this.router = router;\n  }\n\n  ngOnInit() {\n    this.observableData = this.dataSource.connect();\n    this.dataSource = new MatTableDataSource(this.dashboards);\n    this.dataSource.paginator = this.paginator;\n    this.getDashboards();\n  }\n\n  getDashboards() {\n    this.dashboardService.getDashboardList().subscribe(data => {\n      this.dashboards = data;\n      console.log(data);\n    });\n  }\n\n  openDialog() {\n    let dialogRef = this.dialog.open(CreateDashboardComponent, {});\n    dialogRef.afterClosed().subscribe(result => {});\n  }\n\n  editDashboard(id) {\n    this.router.navigate(['edit-dashboard', id]);\n  }\n\n  deleteDashboard(id) {\n    this.dashboardService.deleteDashboard(id).subscribe(data => {\n      this.getDashboards();\n    });\n  }\n\n}\n\nDashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n  return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.DashboardService), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i3.Router));\n};\n\nDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DashboardComponent,\n  selectors: [[\"app-dashboard\"]],\n  viewQuery: function DashboardComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(MatPaginator, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n    }\n  },\n  decls: 23,\n  vars: 7,\n  consts: [[\"matTooltip\", \"Connected\", 1, \"tool\"], [\"id\", \"mat\"], [\"routerLink\", \"/home\", 1, \"btn\"], [1, \"fill\"], [\"routerLink\", \"/dashboard\", 1, \"btn\"], [\"id\", \"plus\", \"routerLink\", \"/dashboard\", \"matTooltip\", \"Add dashboards\", 1, \"material-icons\", 3, \"click\"], [1, \"box1\"], [\"aria-label\", \"Select page\", 3, \"length\", \"pageSize\", \"pageSizeOptions\"], [\"class\", \"box\", 4, \"ngFor\", \"ngForOf\"], [1, \"box\"], [1, \"example-card\"], [\"mat-icon-button\", \"\", 1, \"button\", 3, \"matMenuTriggerFor\"], [1, \"icon\"], [\"menu\", \"matMenu\"], [\"mat-menu-item\", \"\", 3, \"click\"], [\"mat-menu-item\", \"\"], [\"mat-card-avatar\", \"\", 1, \"example-header-image\"]],\n  template: function DashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-toolbar\");\n      i0.ɵɵelementStart(1, \"h2\", 0);\n      i0.ɵɵelementStart(2, \"mat-icon\", 1);\n      i0.ɵɵtext(3, \"panorama_fish_eye\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(4, \" \\u00A0\\u00A0\");\n      i0.ɵɵelementStart(5, \"button\", 2);\n      i0.ɵɵtext(6, \"Home\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(7, \" \\u00A0\\u00A0| \");\n      i0.ɵɵelement(8, \"span\", 3);\n      i0.ɵɵelementStart(9, \"button\", 4);\n      i0.ɵɵtext(10, \"Dashboard\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(11, \" \\u00A0\\u00A0 \");\n      i0.ɵɵelement(12, \"span\", 3);\n      i0.ɵɵelementStart(13, \"span\", 5);\n      i0.ɵɵlistener(\"click\", function DashboardComponent_Template_span_click_13_listener() {\n        return ctx.openDialog();\n      });\n      i0.ɵɵtext(14, \" add_box \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"span\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"div\", 6);\n      i0.ɵɵelementStart(17, \"h2\");\n      i0.ɵɵtext(18, \"Dashboards\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"span\");\n      i0.ɵɵelement(20, \"mat-paginator\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(21, DashboardComponent_div_21_Template, 28, 3, \"div\", 8);\n      i0.ɵɵpipe(22, \"async\");\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(20);\n      i0.ɵɵproperty(\"length\", 100)(\"pageSize\", 10)(\"pageSizeOptions\", i0.ɵɵpureFunction0(6, _c0));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(22, 4, ctx.observableData));\n    }\n  },\n  directives: [i4.MatToolbar, i5.MatTooltip, i6.MatIcon, i3.RouterLink, i7.MatPaginator, i8.NgForOf, i9.MatCard, i10.MatButton, i11.MatMenuTrigger, i11.MatMenu, i11.MatMenuItem, i9.MatCardHeader, i9.MatCardAvatar, i9.MatCardTitle, i9.MatCardSubtitle],\n  pipes: [i8.AsyncPipe],\n  styles: [\".fill[_ngcontent-%COMP%] {\\n  margin-left: 7px;\\n  display: inline-block;\\n}\\n\\n.btn[_ngcontent-%COMP%] {\\n  background: none !important;\\n  border: none;\\n  padding: 0 !important;\\n  \\n  font-family: arial, sans-serif;\\n  \\n  color: black;\\n  font-size: larger;\\n  cursor: pointer;\\n}\\n\\n.btn[_ngcontent-%COMP%]:hover {\\n  color: grey;\\n}\\n\\n.material-icons[_ngcontent-%COMP%]:hover {\\n  color: brown;\\n}\\n\\n#mat[_ngcontent-%COMP%] {\\n  color: green;\\n}\\n\\n#plus[_ngcontent-%COMP%] {\\n  margin-left: 1600px;\\n}\\n\\n.box[_ngcontent-%COMP%] {\\n  width: 300px;\\n  padding: 10px;\\n  margin: 30px;\\n  text-align: center;\\n  float: left;\\n}\\n\\nh2[_ngcontent-%COMP%] {\\n  text-align: center;\\n  font-size: 34px;\\n  font-family: \\\"Segoe UI\\\", Tahoma, Geneva, Verdana, sans-serif;\\n  margin-top: 10px;\\n}\\n\\nh3[_ngcontent-%COMP%] {\\n  font-family: \\\"Franklin Gothic Medium\\\", \\\"Arial Narrow\\\", Arial, sans-serif;\\n  font-size: 20px;\\n}\\n\\n.button[_ngcontent-%COMP%] {\\n  padding: 0;\\n  border: none;\\n  background: none;\\n  position: relative;\\n  bottom: 20px;\\n  left: 140px;\\n}\\n\\n.box1[_ngcontent-%COMP%] {\\n  border: lightslategrey solid 2px;\\n}\\n\\n.tool[_ngcontent-%COMP%] {\\n  margin-bottom: 10px;\\n}\\n\\n.example-card[_ngcontent-%COMP%] {\\n  background-color: lightslategrey;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVJLGdCQUFBO0VBQ0EscUJBQUE7QUFBSjs7QUFJQTtFQUVBLDJCQUFBO0VBQ0EsWUFBQTtFQUNBLHFCQUFBO0VBQ0EsV0FBQTtFQUNBLDhCQUFBO0VBQ0Esb0NBQUE7RUFDQSxZQUFBO0VBQ0EsaUJBQUE7RUFDQSxlQUFBO0FBRkE7O0FBS0E7RUFFQyxXQUFBO0FBSEQ7O0FBT0E7RUFFSSxZQUFBO0FBTEo7O0FBU0E7RUFDSSxZQUFBO0FBTko7O0FBUUE7RUFDSSxtQkFBQTtBQUxKOztBQVFBO0VBR0ksWUFBQTtFQUNBLGFBQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSxXQUFBO0FBUEo7O0FBVUE7RUFDSSxrQkFBQTtFQUNBLGVBQUE7RUFDQSw0REFBQTtFQUNBLGdCQUFBO0FBUEo7O0FBVUE7RUFDSSx3RUFBQTtFQUNBLGVBQUE7QUFQSjs7QUFXQTtFQUNBLFVBQUE7RUFDQSxZQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLFlBQUE7RUFDQSxXQUFBO0FBUkE7O0FBWUE7RUFDSSxnQ0FBQTtBQVRKOztBQVlBO0VBQ0ksbUJBQUE7QUFUSjs7QUFZQTtFQUNJLGdDQUFBO0FBVEoiLCJmaWxlIjoiZGFzaGJvYXJkLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZpbGx7XG4gICBcbiAgICBtYXJnaW4tbGVmdDogIDdweDtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIFxufVxuXG4uYnRue1xuIFxuYmFja2dyb3VuZDogbm9uZSFpbXBvcnRhbnQ7XG5ib3JkZXI6IG5vbmU7XG5wYWRkaW5nOiAwIWltcG9ydGFudDtcbi8qb3B0aW9uYWwqL1xuZm9udC1mYW1pbHk6IGFyaWFsLCBzYW5zLXNlcmlmO1xuLyppbnB1dCBoYXMgT1Mgc3BlY2lmaWMgZm9udC1mYW1pbHkqL1xuY29sb3I6IGJsYWNrO1xuZm9udC1zaXplOiBsYXJnZXI7XG5jdXJzb3I6IHBvaW50ZXI7XG59XG5cbi5idG46aG92ZXJ7XG5cbiBjb2xvcjpncmV5O1xufVxuXG5cbi5tYXRlcmlhbC1pY29uczpob3ZlcntcblxuICAgIGNvbG9yOiBicm93bjtcblxuXG59XG4jbWF0e1xuICAgIGNvbG9yOiBncmVlbjtcbn1cbiNwbHVze1xuICAgIG1hcmdpbi1sZWZ0OiAxNjAwcHg7XG59XG5cbi5ib3h7XG5cbiAgXG4gICAgd2lkdGg6IDMwMHB4O1xuICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgbWFyZ2luOiAzMHB4O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBmbG9hdDogbGVmdDtcbiAgICBcbn1cbmgye1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBmb250LXNpemU6MzRweDtcbiAgICBmb250LWZhbWlseTonU2Vnb2UgVUknLCBUYWhvbWEsIEdlbmV2YSwgVmVyZGFuYSwgc2Fucy1zZXJpZjtcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xufVxuXG5oM3tcbiAgICBmb250LWZhbWlseTonRnJhbmtsaW4gR290aGljIE1lZGl1bScsICdBcmlhbCBOYXJyb3cnLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgICBmb250LXNpemU6IDIwcHg7XG59XG5cblxuLmJ1dHRvbntcbnBhZGRpbmc6IDA7XG5ib3JkZXI6IG5vbmU7XG5iYWNrZ3JvdW5kOiBub25lO1xucG9zaXRpb246IHJlbGF0aXZlO1xuYm90dG9tOiAyMHB4O1xubGVmdDogMTQwcHg7XG5cbn1cblxuLmJveDF7XG4gICAgYm9yZGVyOiBsaWdodHNsYXRlZ3JleSBzb2xpZCAycHggO1xufVxuXG4udG9vbHtcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xufVxuXG4uZXhhbXBsZS1jYXJke1xuICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0c2xhdGVncmV5O1xufVxuXG4iXX0= */\"]\n});","map":{"version":3,"sources":["/home/albi/Desktop/DashboardApp/src/app/components/dashboard/dashboard.component.ts","/home/albi/Desktop/DashboardApp/src/app/components/dashboard/dashboard.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { CreateDashboardComponent } from 'src/app/create-dashboard/create-dashboard.component';\nimport { DashboardService } from 'src/app/dashboard.service';\nimport { Dashboard } from 'src/app/Interfaces/Dashboard';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Observable } from 'rxjs/internal/Observable';\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n\n  dashboards!:Dashboard[];\n\n  dataSource:any\n  observableData!: Observable<any>;\n\n  constructor(private dashboardService:DashboardService,public dialog:MatDialog,private router:Router) { }\n\n\n  ngOnInit(): void {\n\n\n    this.observableData = this.dataSource.connect();\n    this.dataSource = new MatTableDataSource<Dashboard>(this.dashboards);\n    this.dataSource.paginator = this.paginator\n    \n    this.getDashboards();\n   \n  }\n\n\n\n  private getDashboards(){\n    this.dashboardService.getDashboardList().subscribe(data=>{\n\n      this.dashboards =data;\n      console.log(data);\n      \n    })\n  }\n\n  openDialog(){\n\n    let dialogRef=this.dialog.open(CreateDashboardComponent,{\n      \n    })\n    dialogRef.afterClosed().subscribe(result => {\n    \n    });\n  }\n\n\n  editDashboard(id?:String){\n\n    this.router.navigate(['edit-dashboard',id])\n\n  }\n\n  deleteDashboard(id?:String){\n\n    this.dashboardService.deleteDashboard(id!).subscribe(data=>{\n\n      this.getDashboards();\n    })\n  } \n\n}\n","<mat-toolbar >\n  \n   <h2 class=\"tool\" matTooltip=\"Connected\"><mat-icon id=\"mat\">panorama_fish_eye</mat-icon></h2>\n    &nbsp;&nbsp;<button  class=\"btn\" routerLink=\"/home\">Home</button>\n      &nbsp;&nbsp;|\n     <span class=\"fill\"></span>\n     \n     <button  class=\"btn\" routerLink=\"/dashboard\">Dashboard</button>\n     &nbsp;&nbsp;\n     <span class=\"fill\"></span>\n      <span class=\"material-icons\" id=\"plus\" routerLink=\"/dashboard\" matTooltip=\"Add dashboards\" (click)=\"openDialog()\">\n        add_box\n        </span>\n         \n     <span class=\"fill\"></span>\n    </mat-toolbar>\n<div class=\"box1\"></div>\n\n    <h2>Dashboards</h2>\n    \n    <!-- <div class=\"box\" *ngFor=\"let dashboard of dashboards\"> \n\n      <button mat-icon-button [matMenuTriggerFor]=\"menu\" class=\"button\"> \n        <mat-icon class=\"icon\">more_vert</mat-icon>\n      </button>\n      <mat-menu #menu=\"matMenu\">\n        <button mat-menu-item >\n          <mat-icon>edit</mat-icon>\n          <span>Edit</span>\n        </button>\n        <button mat-menu-item>\n          <mat-icon>delete</mat-icon>\n          <span>Delete</span>\n        </button>\n        <button mat-menu-item> \n          <mat-icon>filter_none</mat-icon>\n          <span >View</span>\n        </button>\n        </mat-menu>\n     \n    </div> -->\n    <span>\n      <mat-paginator [length]=\"100\"\n              [pageSize]=\"10\"\n              [pageSizeOptions]=\"[5, 10, 25, 100]\"\n              aria-label=\"Select page\">\n</mat-paginator>\n    </span>\n\n    \n    <div class=\"box\" *ngFor=\"let dashboard of observableData | async\"> \n       \n    <mat-card class=\"example-card\">\n      <button mat-icon-button [matMenuTriggerFor]=\"menu\" class=\"button\"> \n        <mat-icon class=\"icon\">more_vert</mat-icon>\n      </button>\n      <mat-menu #menu=\"matMenu\" >\n        <button mat-menu-item (click)=\"editDashboard(dashboard.id)\">\n          <mat-icon>edit</mat-icon >\n          <span>Edit</span>\n        </button>\n        <button mat-menu-item (click)=\"deleteDashboard(dashboard.id)\">\n          <mat-icon>delete</mat-icon>\n          <span>Delete</span>\n        </button>\n        <button mat-menu-item> \n          <mat-icon>filter_none</mat-icon>\n          <span >View</span>\n        </button>\n        </mat-menu>\n      <mat-card-header>\n        <div mat-card-avatar class=\"example-header-image\"></div>\n        <mat-card-title>{{dashboard.name}}</mat-card-title>\n        <mat-card-subtitle>{{dashboard.description}}</mat-card-subtitle>\n      </mat-card-header>\n    </mat-card>\n  \n  </div>\n \n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}